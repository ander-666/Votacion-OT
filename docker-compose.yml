services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      - votacion-net
    volumes:
      - ./Backend/ot_backend/src/main/resources/db/database_scripts:/docker-entrypoint-initdb.d
    #  - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./Backend/ot_backend/
      dockerfile: Dockerfile
    container_name: votacion-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    #environment:
      #SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/votacion_db
      #SPRING_DATASOURCE_USERNAME: root
      #SPRING_DATASOURCE_PASSWORD: root_password
      #SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "8080:8080"
    networks:
      - votacion-net

  frontend:
    build:
      context: ./Frontend/ot-votaciones/
      dockerfile: Dockerfile
    container_name: votacion-frontend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8002:80"
    networks:
      - votacion-net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: user
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      #KC_LOG_LEVEL: DEBUG  # Enable Debug Logging
     # KC_LOG_LEVEL_ROOT: DEBUG
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_secure_password
      KC_DB_SCHEMA: public
      KC_DB_SCHEMA_UPDATE: auto
      KC_HTTP_PORT: 8180
      KC_HEALTH_ENABLED: "true"
      KC_PROXY: edge
      KC_HOSTNAME: http://localhost:8000/auth
      KC_HOSTNAME_ADMIN: http://localhost:8180/auth
      KC_HTTP_RELATIVE_PATH: /auth
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/keycloak-realm.json
    ports:
      - "8180:8180"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8180/realms/votacion_ot"]
      interval: 10s
      retries: 10
      start_period: 60s
    volumes:
      - ./keycloak-realm:/opt/keycloak/data/import
      - ./keycloak-logs:/opt/keycloack/standalone/log
    command: ["start-dev", "--verbose", "--import-realm"]
    networks:
      - votacion-net

  kong-migrations:
    image: kong/kong:3.4.0
    container_name: kong-migrations
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    command: ["sh", "-c", "sleep 10 && kong migrations bootstrap && kong migrations up"]
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_USER: kong_user
      KONG_PG_PASSWORD: kong_secure_password
      KONG_PG_DATABASE: kong_db
    networks:
      - votacion-net

    

  kong:
    build:
      context: ./kong-config/
      dockerfile: Dockerfile
    container_name: kong
    restart: always
    depends_on:
      kong-migrations:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_USER: kong_user
      KONG_PLUGINS: bundled,oidc
      KONG_PG_PASSWORD: kong_secure_password
      KONG_PG_DATABASE: kong_db
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    ports:
      - "8000:8000"  # Kong API Gateway
      - "8001:8001"  # Kong Admin API
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      retries: 5
      start_period: 60s
    networks:
      - votacion-net

  kong-setup:
    image: alpine:latest
    depends_on:
      kong:
        condition: service_healthy
      #keycloak:
      #  condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: ["sleep 60 && /scripts/setup-kong-db.sh"]
    volumes:
      - ./kong-config:/scripts
    networks:
      - votacion-net

networks:
  votacion-net:

#volumes:
#  db_data:
