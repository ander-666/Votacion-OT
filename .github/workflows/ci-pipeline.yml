name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - tests_funcionales
      - merge_branches
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Run JUnit Tests
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/tests_funcionales' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run JUnit Tests
        working-directory: Backend/ot_backend
        run: mvn -P local clean test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: Backend/ot_backend/target/surefire-reports/*.xml

  lint:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Checkstyle
        continue-on-error: true
        run: mvn -q checkstyle:check

      - name: Run PMD
        continue-on-error: true
        run: mvn -q pmd:check

      - name: Run SpotBugs
        continue-on-error: true
        run: mvn -q spotbugs:check

      - name: OWASP Dependency-Check
        continue-on-error: true
        run: mvn -q org.owasp:dependency-check-maven:check -Ddependency-check.failBuildOnCVSS=7

  sonar:
    name: Build and Analyze
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' 

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run SonarQube Analysis
        working-directory: Backend/ot_backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ander-666_Votacion-OT_0a493e13-23e8-4847-9c9a-83138ab143fc -Dsonar.projectName='Votacion-OT'
